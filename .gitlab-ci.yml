variables:
  JAVA_HOME: /usr/lib/jvm/default-java
  PROJECT_DIR: $CI_PROJECT_DIR
  ANSIBLE_DIR: $CI_PROJECT_DIR/ansible
  TERRAFORM_DIR: $CI_PROJECT_DIR/terraform
  ANSIBLE_CFG: /home/ubuntu/inventory/ansible.cfg

stages:
  - prepare
  - clean
  - build
  - deploy
  - validate
  - undeploy

prepare-ansible:
  stage: prepare
  before_script:
    - ansible --version
    - env
  script:
    - echo "Hello"
    - docker ps -a
    - docker images
    - echo $PROJECT_DIR
    - echo $ANSIBLE_DIR
    - echo $TERRAFORM_DIR

create-aws-instances:
  stage: prepare
  script:
    - ansible-playbook -vvvv $ANSIBLE_DIR/create_aws_instances.yml
    - echo "Done"

clean-local:
  stage : clean
  script:
    - $PROJECT_DIR/mvnw clean -Pansible

clean-remote:
  stage : clean
  script:
    - ansible-playbook -b -vvvv -u ubuntu $ANSIBLE_DIR/clean_docker_images.yml

build-docker-images-on-remote:
  stage: build
  before_script:
    - $PROJECT_DIR/mvnw install -Pansible
    - ansible-galaxy collection install community.docker
  script:
    - ansible-playbook -b -vvvv -u ubuntu $ANSIBLE_DIR/build_docker_images.yml

start-eureka-server:
  stage: deploy
  before_script:
    - ansible-playbook -b -vvvv -u ubuntu $ANSIBLE_DIR/create_docker_network.yml
  script:
    - ansible-playbook -b -vvvv -u ubuntu $ANSIBLE_DIR/start_eureka_server.yml

start-dev-service-using-ansible:
  stage: deploy
  script:
    - ansible-playbook -b -vvvv -u ubuntu $ANSIBLE_DIR/start_development_service.yml

start-prod-service-using-ansible:
  stage: deploy
  before_script:
    - ansible-playbook -b -vvvv -u ubuntu $ANSIBLE_DIR/start_database_server.yml
  script:
    - ansible-playbook -b -vvvv -u ubuntu $ANSIBLE_DIR/start_production_service.yml
  only:
    - master
#  when: manual

validate-production-serviceusing-ansible :
  stage: validate
  script:
    - ansible-playbook $ANSIBLE_DIR/validate_production_service.yml
  only:
    - master
#  when: manual

validate-development-serviceusing-ansible :
  stage: validate
  script:
    - ansible-playbook $ANSIBLE_DIR/validate_development_service.yml
  only:
    - master


undeploy-remote-services:
  stage : undeploy
  script:
    - ansible-playbook -b -vvvv -u ubuntu $ANSIBLE_DIR/clean_docker_images.yml
  only:
    - master
  when: manual