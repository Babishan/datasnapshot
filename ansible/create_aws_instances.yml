- hosts: localhost
  name: Create AWS infrastructure with Terraforms
  vars:
    terraform_dir: ../terraform

  tasks:
    - name: Create AWS all instances with Terraform
      terraform:
        project_path: "{{ terraform_dir }}"
        state: present
        force_init: yes
      register: outputs

    - name: Add all instance public DNS to production host group
      add_host:
        name: "{{ item }}"
        groups: production
      loop: "{{ outputs.outputs.production.value }}"

    - name: Add all instance public DNS to development host group
      add_host:
        name: "{{ item }}"
        groups: development
      loop: "{{ outputs.outputs.development.value }}"

    - lineinfile:
        path: inventory/hosts
        line: "[production]"
    - lineinfile:
        path: inventory/hosts
        line: "{{ item }} ansible_user=ubuntu ansible_ssh_private_key_file=/home/ubuntu/inventory/newkey"
      loop: "{{ outputs.outputs.production.value }}"

    - lineinfile:
        path: inventory/hosts
        line: "[development]"
    - lineinfile:
        path: inventory/hosts
        line: "{{ item }} ansible_user=ubuntu ansible_ssh_private_key_file=/home/ubuntu/inventory/newkey"
      loop: "{{ outputs.outputs.development.value }}"
    - copy:
        src: inventory/hosts
        dest: /home/ubuntu/inventory/hosts

- hosts: all
  name: Install and configure docker
  tasks:
    - name: Ansible apt install package docker
      become: true
      become_user: root
      apt:
        name:
          - python3
          - python3-pip
        state: present
        update_cache: true
    - name: ansible pip3 install docker and docker compose
      command: pip3 install docker docker-compose
    - name: Add user ubuntu to docker group
      become: true
      become_user: root
      command: usermod -aG docker ubuntu
#- hosts: production
#  name: Do something with instances
#  user: ubuntu
#  become: yes
#  become_method: sudo
#  gather_facts: false
#  vars:
#    ansible_ssh_private_key_file: /etc/ansible/key
#  vars_prompt:
#    - name: ssh add
#      prompt: "Are you sure you want to continue connecting (yes/no/[fingerprint])?"
#      default: yes
#  tasks:
#    -  name: sleep
#       command: sleep 60
#    - name: Wait for production instances to become reachable over SSH
#      wait_for_connection:
#        delay: 60
#        timeout: 600
#    - name: Ping
#      ping: